we'll do modulo of n. since we can only rotate in less than n elements. Modulo will help a lot if d is very very large. k = k % n

BRUTE - 

	- we make a temp array, put starting ke k elements in it.
	- we then shift the left array towards left.
	- we then put the elements from temp to array again at the back
  
#include <bits/stdc++.h> 
#include <iostream>
using namespace std;

int leftrotate(vector<int> &arr, int n, int k) {
    k = k % n;

    // make temp array
    int temp[k];
    for(int i = 0; i < k; i++) {
        temp[i] = arr[i];
    }

    // shift the rest array
    for(int i = k; i < n; i++) {
        arr[i - k] = arr[i];
    }
    
    // put the array in the place
    for(int i = n - k; i < n; i++) {
        arr[i] = temp[i - (n - k)];
    }
}

int main() {
    int n;
    cin >> n;
    vector<int> arr(n);
    for(int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    int k;
    cin >> k;
    leftrotate(arr, n, k);
    for(int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }

    return 0;
}
